// Basic if statements
print "--- Basic if statements ---";
if (true) {
  print "This should be printed";
}

if (false) {
  print "This should NOT be printed";
}

// If-else statements
print "--- If-else statements ---";
if (true) {
  print "True branch executed";
} else {
  print "This should NOT be printed";
}

if (false) {
  print "This should NOT be printed";
} else {
  print "False branch executed";
}

// Nested if statements
print "--- Nested if statements ---";
if (true) {
  if (true) {
    print "Nested if: both true";
  } else {
    print "This should NOT be printed";
  }
} else {
  print "This should NOT be printed";
}

// Logical operators
print "--- Logical operators ---";
print "true and true = " + (true and true); // Should be true
print "true and false = " + (true and false); // Should be false
print "false and true = " + (false and true); // Should be false (short-circuit)
print "false and false = " + (false and false); // Should be false (short-circuit)

print "true or true = " + (true or true); // Should be true (short-circuit)
print "true or false = " + (true or false); // Should be true (short-circuit)
print "false or true = " + (false or true); // Should be true
print "false or false = " + (false or false); // Should be false

// Logical operator precedence
print "--- Logical operator precedence ---";
print "true or false and false = " + (true or false and false); // Should be true ('and' has higher precedence)
print "(true or false) and false = " + ((true or false) and false); // Should be false

// Using logical operators in if statements
print "--- Logical operators in if statements ---";
if (true and true) {
  print "true and true: condition met";
}

if (true and false) {
  print "This should NOT be printed";
} else {
  print "true and false: condition not met";
}

if (false or true) {
  print "false or true: condition met";
}

if (false or false) {
  print "This should NOT be printed";
} else {
  print "false or false: condition not met";
}

// More complex conditions
print "--- Complex conditions ---";
var a = 5;
var b = 10;
var c = 15;

if (a < b and b < c) {
  print "a < b < c: condition met";
}

if (a > b or b < c) {
  print "a > b or b < c: condition met";
}

if ((a > b or a < c) and a == 5) {
  print "Combined condition met";
}

// Variable assignment in conditions
print "--- Assignment and conditions ---";
var x = nil;
if (x == nil) {
  print "x is nil initially";
}

x = 42;
if (x != nil) {
  print "x is now " + x;
}

// Short-circuit evaluation
print "--- Short-circuit evaluation ---";
var shortCircuit = "not reached";
var didShortCircuit = true;

// Simple short-circuit demonstration
if (false and didShortCircuit) {
  print "This should NOT be printed";
} else {
  print "false and X short-circuits at 'false'";
}

if (true or didShortCircuit) {
  print "true or X short-circuits at 'true'";
} else {
  print "This should NOT be printed";
}

// Truthy and falsy values
print "--- Truthy and falsy values ---";
if (0) {
  print "0 is truthy in Lox";
} else {
  print "0 is falsy in Lox";
}

if ("") {
  print "Empty string is truthy in Lox";
} else {
  print "Empty string is falsy in Lox";
}

if ("hello") {
  print "Non-empty string is truthy in Lox";
} else {
  print "Non-empty string is falsy in Lox";
}

if (nil) {
  print "nil is truthy in Lox";
} else {
  print "nil is falsy in Lox";
}

// While loops
print "--- While loops ---";

// Basic while loop
print "Basic while loop:";
var i = 1;
while (i <= 5) {
  print i;
  i = i + 1;
}

// While loop with break condition
print "While loop with condition:";
var sum = 0;
var count = 1;
while (count <= 10) {
  sum = sum + count;
  count = count + 1;
}
print "Sum of numbers 1-10: " + sum;

// Nested while loops
print "Nested while loops:";
var outer = 1;
while (outer <= 3) {
  var inner = 1;
  while (inner <= 3) {
    print "Outer: " + outer + ", Inner: " + inner;
    inner = inner + 1;
  }
  outer = outer + 1;
}

// While loop with logical operators
print "While loop with logical operators:";
var x = 1;
while (x <= 5 and x < 6) {
  print "x is: " + x;
  x = x + 2;
}

// Early exit with if statement
print "Early exit pattern:";
var n = 1;
while (n <= 10) {
  if (n > 5) {
    print "Exiting early at " + n;
    n = 11; // Simulate a break
  } else {
    print "n = " + n;
    n = n + 1;
  }
}

// Counter with multiple conditions
print "Counter with multiple modifications:";
var counter = 0;
var isEven = false;
while (counter < 10) {
  counter = counter + 1;
  
  if (isEven) {
    print counter + " is even";
    isEven = false;
  } else {
    print counter + " is odd";
    isEven = true;
  }
}

// Complex while loop
print "Complex while loop:";
var result = 0;
var j = 0;
while (j < 5) {
  var k = j;
  while (k > 0) {
    result = result + 1;
    k = k - 1;
  }
  j = j + 1;
}
print "Final result: " + result; // Should be 10 (sum of 0+1+2+3+4) 